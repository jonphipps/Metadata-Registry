<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseRegStatus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reg_status');
        $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => '4'));
        $this->hasColumn('display_order', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('display_name', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('uri', 'string', 255, array('type' => 'string', 'length' => '255'));
    }

    public function setUp()
    {
        $this->hasMany('Profile', array('local' => 'id',
                                        'foreign' => 'status_id'));

        $this->hasMany('ProfileProperty', array('local' => 'id',
                                                'foreign' => 'status_id'));

        $this->hasMany('RegConcept', array('local' => 'id',
                                           'foreign' => 'status_id'));

        $this->hasMany('RegConceptPropertyHistory', array('local' => 'id',
                                                          'foreign' => 'status_id'));

        $this->hasMany('RegObjectHistory', array('local' => 'id',
                                                 'foreign' => 'status_id'));

        $this->hasMany('RegSchema', array('local' => 'id',
                                          'foreign' => 'status_id'));

        $this->hasMany('RegSchemaProperty', array('local' => 'id',
                                                  'foreign' => 'status_id'));

        $this->hasMany('RegSchemaPropertyElement', array('local' => 'id',
                                                         'foreign' => 'status_id'));

        $this->hasMany('RegSchemaPropertyElementHistory', array('local' => 'id',
                                                                'foreign' => 'status_id'));

        $this->hasMany('RegVocabulary', array('local' => 'id',
                                              'foreign' => 'status_id'));
    }
}