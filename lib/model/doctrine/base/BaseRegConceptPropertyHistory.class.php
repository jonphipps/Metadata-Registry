<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseRegConceptPropertyHistory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reg_concept_property_history');
        $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => '4'));
        $this->hasColumn('created_at', 'timestamp', 25, array('type' => 'timestamp', 'notnull' => true, 'length' => '25'));
        $this->hasColumn('action', 'enum', 13, array('type' => 'enum', 'values' => array(0 => 'updated', 1 => 'added', 2 => 'deleted', 3 => 'force_deleted'), 'length' => '13'));
        $this->hasColumn('language', 'string', 6, array('type' => 'string', 'fixed' => 1, 'default' => 'en', 'length' => '6'));
        $this->hasColumn('status_id', 'integer', 4, array('type' => 'integer', 'default' => '1', 'length' => '4'));
        $this->hasColumn('concept_property_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('concept_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('vocabulary_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('skos_property_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('object', 'string', 2147483647, array('type' => 'string', 'length' => '2147483647'));
        $this->hasColumn('scheme_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('related_concept_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('created_user_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('change_note', 'string', 2147483647, array('type' => 'string', 'length' => '2147483647'));
    }

    public function setUp()
    {
        $this->hasOne('RegSkosProperty', array('local' => 'skos_property_id',
                                               'foreign' => 'id'));

        $this->hasOne('RegVocabulary', array('local' => 'scheme_id',
                                             'foreign' => 'id'));

        $this->hasOne('RegStatus', array('local' => 'status_id',
                                         'foreign' => 'id'));

        $this->hasOne('RegConcept', array('local' => 'related_concept_id',
                                          'foreign' => 'id'));

        $this->hasOne('RegUser', array('local' => 'created_user_id',
                                       'foreign' => 'id'));

        $this->hasOne('RegConceptProperty', array('local' => 'concept_property_id',
                                                  'foreign' => 'id'));

        $this->hasOne('RegVocabulary as RegVocabulary_7', array('local' => 'vocabulary_id',
                                                                'foreign' => 'id'));

        $this->hasOne('RegConcept as RegConcept_8', array('local' => 'concept_id',
                                                          'foreign' => 'id'));
    }
}