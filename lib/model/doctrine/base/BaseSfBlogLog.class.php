<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseSfBlogLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_blog_log');
        $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => '4'));
        $this->hasColumn('user_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('subject_class', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('subject_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('subject_name', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('subject_link', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('verb', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('object_class', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('object_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('object_name', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('object_link', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('complement_class', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('complement_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('complement_name', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('complement_link', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('message', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('created_at', 'timestamp', 25, array('type' => 'timestamp', 'length' => '25'));
    }

    public function setUp()
    {
        $this->hasOne('SfGuardUser', array('local' => 'user_id',
                                           'foreign' => 'id'));
    }
}