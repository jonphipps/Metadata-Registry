generator:
  class:              sfPropelAdminGenerator
  param:
    model_class:      Vocabulary
    theme:            default

    fields:
      id:           { name: ID }
      created_at:   { name: Date Created, type: plain, params: date_format='MM/dd/yy' }
      last_updated: { name: Last Updated, type: plain, params: date_format='MM/dd/yy', help: This is the date the Vocabulary was last updated }
      agent:        { name: Owner }
      agent_id:     { name: Owner
      name:         { name: Name }
      note:         { name: Note }
      uri:          { name: URI }
      url:          { name: URL }
      base_domain:  { name: Base Domain }
      token:        { name: Token }
      community:    { name: Community }
      _concepts:    { name: Concepts }
      _versions:    { name: Versions }

    list:
      display:   [name, last_updated, agent, _concepts, _versions]
      object_actions:
        _show:
        _edit:      { credentials: [administrator] }
        rdf:        { name: Get RDF, icon: /sf/images/sf_admin/rdf_icon.png }
      actions:
        _create:    { credentials: [administrator] }
      filters:      [agent_id]

    edit:
      title:        Detail for %%name%%
      display:      [agent_id, name, base_domain, uri, token, url, note, community]
      fields:
        id:           { type: plain }
        created_at:   { type: plain }
        last_updated: { type: plain }
      actions:
        _list:      -
        _save:         { credentials: [[administrator, hasAgents]] }
        _delete:       { credentials: [administrator] }
        _create:       { credentials: [[administrator, hasAgents]] }
        _save_and_add: { credentials: [administrator] }

    show:
      fields:
        id:           { name: ID, credentials: [administrator] }
        uri:          { helper: auto_link_text }
        url:          { helper: auto_link_text }
      display:      [id, created_at, last_updated, agent, name, base_domain, uri, token, url, note, community]
      actions:
        _edit:      { credentials: [administrator] }
        _list:

    create:
      display:      [agent_id, name, base_domain, uri, token, url, note, community]
      actions:
        _list:      -
        _save:         { credentials: [[administrator, hasAgents]] }
        _save_and_add: { credentials: [administrator] }