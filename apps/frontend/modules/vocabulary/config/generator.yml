generator:
  class:              sfPropelAdminGenerator
  param:
    model_class:      Vocabulary
    theme:            default

    fields:
      id:             { name: ID, type: plain}
      created_at:     { name: Date Created, type: plain, params: date_format='s', help: This is the date the Vocabulary was created }
      last_updated:   { name: Last Updated, type: plain, params: date_format='s', help: This is the date the Vocabulary was last updated }
      agent:          { name: Owner, help: The individual or organization that registered the vocabulary }
      agent_id:       { name: Owner, help: The individual or organization that registered the vocabulary }
      name:           { name: Name, help: A descriptive name for the vocabulary. This will be displayed in lists of vocabularies. }
      note:           { name: Note, help: A note about this vocabulary }
      uri:            { name: URI, help: The URI of this vocabulary. By default this will be a concatenation of the Base Domain and the Token. }
      url:            { name: URL, help: A non-Registry URL that contains more information about this vocabulary }
      base_domain:    { name: Base Domain, help: The root of all URIs for this vocabulary and its terms. Defaults to the Base Domain set by the Owner of this vocabulary. }
      token:          { name: Token, help: A unique token representing this vocabulary. This can be used as the RDF container class or to identify an encoding scheme in XML}
      community:      { name: Community, help: Tags identifying communities of practice that this vocabulary addresses }
      language:       { name: Language, help: Default language for the concept properties of this vocabulary }
      status_id:      { name: Default Status, help: Default status for the concept properties of this vocabulary }

    list:
      title:          Vocabularies
      fields:
        last_updated: { params: date_format='yyyy-MM-dd' }
      display:        [=name, _agent, last_updated]
      sort:           name
      object_actions:
        _edit:        { credentials: [[administrator, vocabularymaintainer, vocabularyadmin]] }
      actions:
        _create:      { name: Add Vocabulary,  credentials: [[administrator, hasAgents]] }
      filters:        [agent_id]

    edit:
      title:
        mode:
          edit:       Editing %%name%%
          create:     Creating new vocabulary
      helptype:       icon
      fields:
        id:           { name: ID, type: plain, credentials: [administrator], mode: edit }
        agent_id:     { params: peer_method=getAgentsForCurrentUser}
        token:        { params: onblur=updateUri() }
        language:     { type: select_language_tag }
      display:
        "-Metadata":  { fields: [id, created_at, last_updated], mode: edit, credentials: [[administrator, vocabularymaintainer, vocabularyadmin]] }
        "Detail":     [agent_id, name, url, note, community, status_id, language]
        "URI":        [base_domain, token, uri]
      actions:
        _list:         -
        _save:         { credentials: [[administrator, hasAgents, vocabularymaintainer, vocabularyadmin]] }
        _delete:       { credentials: [administrator] }
        _create:       { credentials: [[administrator, hasAgents]], mode: edit }
        _save_and_add: { credentials: [administrator] }
        _cancel:       { credentials: [[administrator, hasAgents, vocabularymaintainer, vocabularyadmin]] }

    show:
      title:           Show detail for %%name%%
      fields:
        id:            { name: ID, type: plain, credentials: [administrator], mode: edit }
        uri:           { helper: auto_link_text }
        url:           { helper: auto_link_text }
        created_at:    { params: date_format='F' }
        last_updated:  { params: date_format='F' }
        list_users:    { name: - }
      display:
        "-Metadata":   { fields: [id, created_at, last_updated], credentials: [[administrator, vocabularymaintainer, vocabularyadmin]] }
        "Detail":      [_agent, name, url, note, community, status, _language]
        "URI":         [base_domain, token, uri]
        "-Users":      [_list_users]
      actions:
        _list:
        _edit:       { credentials: [[administrator, vocabularymaintainer, vocabularyadmin]] }
        rdf:
          name:      Get RDF
          icon:      %SF_ADMIN_WEB_DIR%/images/rdf_icon.png
          route:     rdf_vocabulary
        xml:
          name:      Get XML Schema
          icon:      %SF_ADMIN_WEB_DIR%/images/xmlschema_icon.png
          route:     xml_schema_vocabulary
