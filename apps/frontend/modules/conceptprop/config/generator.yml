generator:
  class:              sfPropelAdminGenerator
  param:
    model_class:      ConceptProperty
    theme:            default

    fields:
      id:
        name: ID
        type: plain
      created_at:
        name: Date Created
        type: plain
        params: date_format='MM/dd/yy'
      last_updated:
        name: Last Updated
        help: This is the date the property was last updated
        type: plain
        params: date_format='MM/dd/yy'
      concept_id:       { name: Parent Concept }
      related_concept_id:  
      scheme_id:
      skos_property:    { name: skos:property }
      object:           { name: Value }
      show_object:      { name: Value }
      listproperties:   { name: "" }

    list:
      title:         Concept Property List
      display:       [=skos_property, _show_object, last_updated]
      displayfilter: false
      object_actions:
        _edit:       { credentials: [[administrator, vocabularymaintainer]] }
        _delete:     { credentials: [[administrator, vocabularymaintainer]] }
      actions:
        _create:     { name: Add Property, credentials: [[administrator, vocabularymaintainer]] }
      filters:       [concept_id, skos_property_id, last_updated, object]
      # urlfilter form is [field to filter on]: [value passed from routing.yml]
      # multiple filters can be set but they're currently mutually exclusive (any of the list can be used but only one per url)
      urlfilters:
        concept_id: concept_id

    edit:
      hide:                 [concept_id]
      fields:
        _scheme_id:         { name: Vocabulary }
        object:             { name: Value }
        skos_property_id:   { name: skos:property, params: onchange=swapOptions() }
        related_concept_id: { params: related_class=Concept peer_method=getConceptsByCurrentVocabID }
        language:           { type: select_language_tag }
      title:           Edit
      display:
        "Metadata":    { fields: [id, created_at, last_updated], mode: edit, credentials: [[administrator, vocabularymaintainer]] }
        "Detail":      [skos_property_id, _scheme_id, related_concept_id, object, language]
        "Properties":  [_listproperties]
      actions:
        # You can add a string literal to the query string like this: foo: "'bar'" which will add foo=bar
        _list:         { query_string: {concept_id: concept_id} }
        _save:         { credentials: [[administrator, vocabularymaintainer]] }
        _delete:       { credentials: [[administrator, vocabularymaintainer]] }
        _create:       { credentials: [[administrator, vocabularymaintainer]] }
        _save_and_add: { credentials: [[administrator, vocabularymaintainer]] }

    show:
      fields:
        id:           { name: ID, credentials: [administrator] }
        object:       { helper: auto_link_text }
      display:
        "Metadata":   [id, created_at, last_updated]
        "Detail":     [skos_property, related_scheme, related_concept, object, _language]
        "Properties": [_listproperties]
      actions:
        _edit:        { credentials: [[administrator, vocabularymaintainer]] }
        _list:        { query_string: {concept_id: concept_id} }

