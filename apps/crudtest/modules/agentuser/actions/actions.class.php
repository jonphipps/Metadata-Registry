<?php
// auto-generated by sfPropelCrud
// date: 2007/02/03 15:48:54
?>
<?php

/**
 * agentuser actions.
 *
 * @package    registry
 * @subpackage agentuser
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class agentuserActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('agentuser', 'list');
  }

  public function executeList()
  {
    $this->agent_has_users = AgentHasUserPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->agent_has_user = AgentHasUserPeer::retrieveByPk($this->getRequestParameter('user_id'),
                       $this->getRequestParameter('agent_id'));
    $this->forward404Unless($this->agent_has_user);
  }

  public function executeCreate()
  {
    $this->agent_has_user = new AgentHasUser();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->agent_has_user = AgentHasUserPeer::retrieveByPk($this->getRequestParameter('user_id'),
                       $this->getRequestParameter('agent_id'));
    $this->forward404Unless($this->agent_has_user);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('user_id')
     || !$this->getRequestParameter('agent_id'))
    {
      $agent_has_user = new AgentHasUser();
    }
    else
    {
      $agent_has_user = AgentHasUserPeer::retrieveByPk($this->getRequestParameter('user_id'),
                   $this->getRequestParameter('agent_id'));
      $this->forward404Unless($agent_has_user);
    }

    $agent_has_user->setUserId($this->getRequestParameter('user_id') ? $this->getRequestParameter('user_id') : null);
    $agent_has_user->setAgentId($this->getRequestParameter('agent_id') ? $this->getRequestParameter('agent_id') : null);
    $agent_has_user->setIsRegistrarFor($this->getRequestParameter('is_registrar_for', 0));
    $agent_has_user->setIsAdminFor($this->getRequestParameter('is_admin_for', 0));

    $agent_has_user->save();

    return $this->redirect('agentuser/show?user_id='.$agent_has_user->getUserId().'&agent_id='.$agent_has_user->getAgentId());
  }

  public function executeDelete()
  {
    $agent_has_user = AgentHasUserPeer::retrieveByPk($this->getRequestParameter('user_id'),
                 $this->getRequestParameter('agent_id'));

    $this->forward404Unless($agent_has_user);

    $agent_has_user->delete();

    return $this->redirect('agentuser/list');
  }
}
