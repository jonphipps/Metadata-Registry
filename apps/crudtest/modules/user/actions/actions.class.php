<?php
// auto-generated by sfPropelCrud
// date: 2007/02/03 15:43:22
?>
<?php

/**
 * user actions.
 *
 * @package    registry
 * @subpackage user
 * @author     Jon Phipps <jonphipps@gmail.com>
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class userActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('user', 'list');
  }

  public function executeList()
  {
    $this->users = UserPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->user = UserPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->user);
  }

  public function executeCreate()
  {
    $this->user = new User();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->user = UserPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->user);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $user = new User();
    }
    else
    {
      $user = UserPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($user);
    }

    $user->setId($this->getRequestParameter('id'));
    if ($this->getRequestParameter('last_updated'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('last_updated'), $this->getUser()->getCulture());
      $user->setLastUpdated("$y-$m-$d");
    }
    $user->setNickname($this->getRequestParameter('nickname'));
    $user->setSalutation($this->getRequestParameter('salutation'));
    $user->setFirstName($this->getRequestParameter('first_name'));
    $user->setLastName($this->getRequestParameter('last_name'));
    $user->setEmail($this->getRequestParameter('email'));
    $user->setSha1Password($this->getRequestParameter('sha1_password'));
    $user->setSalt($this->getRequestParameter('salt'));
    $user->setWantToBeModerator($this->getRequestParameter('want_to_be_moderator', 0));
    $user->setIsModerator($this->getRequestParameter('is_moderator', 0));
    $user->setIsAdministrator($this->getRequestParameter('is_administrator', 0));
    $user->setDeletions($this->getRequestParameter('deletions'));
    $user->setPassword($this->getRequestParameter('password'));

    $user->save();

    return $this->redirect('user/show?id='.$user->getId());
  }

  public function executeDelete()
  {
    $user = UserPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($user);

    $user->delete();

    return $this->redirect('user/list');
  }
}
