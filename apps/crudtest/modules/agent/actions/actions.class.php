<?php
// auto-generated by sfPropelCrud
// date: 2007/02/03 15:43:59
?>
<?php

/**
 * agent actions.
 *
 * @package    registry
 * @subpackage agent
 * @author     Jon Phipps <jonphipps@gmail.com>
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class agentActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('agent', 'list');
  }

  public function executeList()
  {
    $this->agents = AgentPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->agent = AgentPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->agent);
  }

  public function executeCreate()
  {
    $this->agent = new Agent();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->agent = AgentPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->agent);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $agent = new Agent();
    }
    else
    {
      $agent = AgentPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($agent);
    }

    $agent->setId($this->getRequestParameter('id'));
    if ($this->getRequestParameter('last_updated'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('last_updated'), $this->getUser()->getCulture());
      $agent->setLastUpdated("$y-$m-$d");
    }
    $agent->setOrgEmail($this->getRequestParameter('org_email'));
    $agent->setOrgName($this->getRequestParameter('org_name'));
    $agent->setIndAffiliation($this->getRequestParameter('ind_affiliation'));
    $agent->setIndRole($this->getRequestParameter('ind_role'));
    $agent->setAddress1($this->getRequestParameter('address1'));
    $agent->setAddress2($this->getRequestParameter('address2'));
    $agent->setCity($this->getRequestParameter('city'));
    $agent->setState($this->getRequestParameter('state'));
    $agent->setPostalCode($this->getRequestParameter('postal_code'));
    $agent->setCountry($this->getRequestParameter('country'));
    $agent->setPhone($this->getRequestParameter('phone'));
    $agent->setWebAddress($this->getRequestParameter('web_address'));
    $agent->setType($this->getRequestParameter('type'));

    $agent->save();

    return $this->redirect('agent/show?id='.$agent->getId());
  }

  public function executeDelete()
  {
    $agent = AgentPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($agent);

    $agent->delete();

    return $this->redirect('agent/list');
  }
}
